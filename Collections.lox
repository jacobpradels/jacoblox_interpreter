class Collections {
    init(size) {
        this.offset = stack_trace;
        this.MemoryController = mem(this.offset,this.offset + size);
    }

    get(location) {
        return this.MemoryController("r",this.offset + location,nil);
    }
    
    set(location,data) {
        return this.MemoryController("w",this.offset + location,data);
    }
}

class Array < Collections {
    init(size) {
        super.init(size);
        this.size = size;
        this.StringRep = this.display();
    }

    append(value) {
        for (var x = 0; x < this.size; x = x + 1) {
            if (this.get(x) == nil) {
                this.set(x,value);
                this.StringRep = this.display();
                return;
            }
        }
        print "WARNING: Appending to full array.  Append failed. \n";
    }
    
    set(location,data) {
        super.set(location,data);
        this.StringRep = this.display();
    }

    display() {
        var final = "";
        final = final + "[";
        for (var index = 0; index < this.size - 1; index = index + 1) {
            // final = final + 0 + ",";
            final = final + this.get(index) + ", ";
        }
        final = final + this.get(this.size - 1) + "]";
        return final;
    }

    // TODO : SORT

    // TODO : SLICE
}